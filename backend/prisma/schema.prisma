generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum StatusUser {
    ONLINE
    OFFLINE
    INQUEUE
    INGAME
}

enum Role {
    ADMIN
    USER
    OPERATOR
    BANNED
}

enum Mode {
    CHAT // user to user
    CONVERSATION // user to n users
    PRIVATE // user to n user with password
    INVONLY // user to n user with invitation
}

model User {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    email    String  @unique
    username String? @unique
    avatar   String? @unique
    tittle   String?
    hash     String

    fortyTwoId   Int?    @unique
    fortyTwoAuth Boolean @default(false)
    googleId     Boolean @default(false)

    role   Role       @default(USER)
    status StatusUser @default(ONLINE)

    stats Stats[]

    friendsof User[] @relation("friendslist")
    friends   User[] @relation("friendslist")

    blockedBy   User[] @relation("blockedList")
    blockedList User[] @relation("blockedList")

    achievements Achievement[]
    messages     Message[]     @relation("author")
    channel      Channel[]     @relation("chanMembers")
    banned       Channel[]     @relation("chanBanned")
    ownedChannel Channel[]     @relation("ownedchan")

    @@map("Users")
}

model Achievement {
    id          Int    @id @default(autoincrement())
    user        User   @relation(fields: [userId], references: [id])
    userId      Int
    title       String @unique
    description String
    icon        String

    @@map("Achievements")
}

model Stats {
    id     Int  @id @default(autoincrement())
    user   User @relation(fields: [userId], references: [id])
    userId Int  @unique

    lvl Int @default(1)
    exp Int @default(0)

    partyPlayed Int @default(0)
    partyWin    Int @default(0)
    partyLose   Int @default(0)

    history String[] @default([])

    @@map("Stats")
}

model Channel {
    chanId    Int       @id @default(autoincrement())
    name      String    @unique
    owner     User      @relation("ownedchan", fields: [chanId], references: [id])
    op        String[]
    newmsg    Boolean   @default(false)
    mentions  Int       @default(0)
    modes     Mode      @default(CHAT)
    password  String?
    updatedAt DateTime  @default(now())
    members   User[]    @relation("chanMembers")
    messages  Message[] @relation("chanMessages")
    banned    User[]    @relation("chanBanned")
}

model Message {
    id          Int      @id @default(autoincrement())
    channelName String
    channel     Channel  @relation("chanMessages", fields: [channelName], references: [name])
    author      User     @relation("author", fields: [id], references: [id])
    content     String
    createdAt   DateTime @default(now())
}

model Game {
    id         Int    @id @default(autoincrement())
    name       String @unique
    nbrPlayers Int    @default(0)
    userId     Int
    // Player		User[]		@relation(fields: [userId], references: [id])
}
